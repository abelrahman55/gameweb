{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\project2\\\\medical\\\\src\\\\components\\\\Allindexs\\\\CreateNFT\\\\CreateNft.js\";\nimport './createnft.css';\nimport React from 'react';\nimport Crnft from './Createdata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNft = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createnft\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createnft-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"create Your NFT Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Your NFT & Put It On The Market.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createnft-content\",\n        children: Crnft.map(nft => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nft\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: nft.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: nft.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: nft.des\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = CreateNft;\nexport default CreateNft;\nvar _c;\n$RefreshReg$(_c, \"CreateNft\");","map":{"version":3,"names":["React","Crnft","CreateNft","map","nft","image","title","des"],"sources":["E:/projects/project2/medical/src/components/Allindexs/CreateNFT/CreateNft.js"],"sourcesContent":["import './createnft.css';\r\nimport React from 'react'\r\nimport Crnft from './Createdata.json'\r\nconst CreateNft = () => {\r\n  return (\r\n    <div className='createnft'>\r\n      <div className='createnft-container'>\r\n      <button>create Your NFT Now</button>\r\n        <div className='head'>\r\n          <h2>Create Your NFT & Put It On The Market.</h2>\r\n        </div>\r\n        <div className='createnft-content'>\r\n          {\r\n            Crnft.map((nft)=>{\r\n              return(\r\n                <div className='col'>\r\n                  <div className='nft'>\r\n                    <img src={nft.image} alt=\"\" />\r\n                    <h3>{nft.title}</h3>\r\n                    <p>{nft.des}</p>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateNft"],"mappings":";AAAA,OAAO,iBAAiB;AACxB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,mBAAmB;AAAA;AACrC,MAAMC,SAAS,GAAG,MAAM;EACtB,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBACpC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoC,eAClC;QAAK,SAAS,EAAC,MAAM;QAAA,uBACnB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgD;QAAA;QAAA;QAAA;MAAA,QAC5C,eACN;QAAK,SAAS,EAAC,mBAAmB;QAAA,UAE9BD,KAAK,CAACE,GAAG,CAAEC,GAAG,IAAG;UACf,oBACE;YAAK,SAAS,EAAC,KAAK;YAAA,uBAClB;cAAK,SAAS,EAAC,KAAK;cAAA,wBAClB;gBAAK,GAAG,EAAEA,GAAG,CAACC,KAAM;gBAAC,GAAG,EAAC;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAG,eAC9B;gBAAA,UAAKD,GAAG,CAACE;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACpB;gBAAA,UAAIF,GAAG,CAACG;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA;UACZ;YAAA;YAAA;YAAA;UAAA,QACF;QAEV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAGA;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,KA3BKL,SAAS;AA6Bf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}